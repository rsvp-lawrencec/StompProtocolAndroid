apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'groovyx.android'
apply plugin: 'kotlin-android'

group='com.github.NaikSoftware'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.1"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // https://stackoverflow.com/a/48988779/11419056
    // * Go to Build, Execution, Deployment > Compiler > Kotlin Compiler BUT Other Settings > Kotlin compiler
    // * Change the Target JVM version to 1.8, then Apply
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
    }
}


dependencies {

    // Jetbrains Kotlin Dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "io.reactivex.rxjava2:rxjava:$rx2Java"
    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Supported transports
    api "org.java-websocket:Java-WebSocket:$javaWebSocket"
    api "com.squareup.okhttp3:okhttp:$okhttp3"
//    implementation 'com.android.support:support-annotations:28.0.0'
    testImplementation "com.andrewreitz:spock-android:$spockAndroid"
    testImplementation "org.testcontainers:testcontainers:$testcontainers"
    testImplementation "org.spockframework:spock-core:$spockframework"
    testImplementation "ch.qos.logback:logback-classic:$logbackClassic"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}